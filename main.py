import pyowm
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.utils import executor

import config
from states import GetWeather

storage = MemoryStorage()
bot = Bot(token=config.BOT_TOKEN)
dp = Dispatcher(bot, storage=storage)


@dp.message_handler(Command(["start", "help"]))
async def start(message: types.Message):
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üå¶ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É üå¶",
                callback_data="weather"
            )
        ]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ WeatherBot! –¢—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —É –º–µ–Ω—è –ø–æ–≥–æ–¥—É üå¶", reply_markup=keyboard)


@dp.callback_query_handler(text="weather")
async def type_city(call: CallbackQuery):
    await call.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –ø–æ–≥–æ–¥—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å:")
    await GetWeather.weather.set()


@dp.message_handler(state=GetWeather.weather)
async def send_weather(message: types.Message, state: FSMContext):
    place = message.text
    mgr = config.owm.weather_manager()
    try:
        observation = mgr.weather_at_place(place)
        w = observation.weather
        t = w.temperature("celsius")
    except pyowm.commons.exceptions.NotFoundError:
        await message.answer("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await message.answer_sticker('CAACAgIAAxkBAAEDH3phcQlrYn60HQxEomCwJ5GxO0aYQgACPQEAAjDUnREQ98oHcZKP7iEE')
    except pyowm.commons.exceptions.TimeoutError:
        await message.answer("–û—à–∏–±–∫–∞.")
        await message.answer_sticker('CAACAgIAAxkBAAEDH3phcQlrYn60HQxEomCwJ5GxO0aYQgACPQEAAjDUnREQ98oHcZKP7iEE')
    else:
        await message.answer(f"–í –≥–æ—Ä–æ–¥–µ {place} {t['temp']}¬∞, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {t['feels_like']}¬∞, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è "
                             f"—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {t['temp_max']}¬∞, –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {t['temp_min']}¬∞. –°–∫–æ—Ä–æ—Å—Ç—å "
                             f"–≤–µ—Ç—Ä–∞ - {w.wind()['speed']} –º/—Å. –û–±–ª–∞—á–Ω–æ—Å—Ç—å - {w.clouds}. –°—Ç–∞—Ç—É—Å - {w.status}. –î–µ—Ç–∞–ª–∏ - "
                             f"{w.detailed_status}. –°–ø—Ä–∞–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è - {w.reference_time('iso')}. –î–∞–≤–ª–µ–Ω–∏–µ - "
                             f"{w.pressure['press']} –ü–∞. –í–∏–¥–∏–º–æ—Å—Ç—å - {w.visibility_distance} –º–µ—Ç—Ä–æ–≤.")
    await state.finish()


executor.start_polling(dp)

